{"config":{"indexing":"full","lang":["pt"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Evolu\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o Warning Texto em desenvolvimento Geral Mais de 60 anos desde a cria\u00e7\u00e3o da primeira linguagen de programa\u00e7\u00e3o de alto n\u00edvel e, para mim, a \u00fanica coisa que evoluiu para o programador foi o editor. As linguagens/framaworks utilizados para desenvolvimento se tornaram extremamente complexos fazendos com que o programador tenha que perder tempo se preocupando com detalhes superfluos que nada tem a ver com a resolu\u00e7\u00e3o do problema que \u00e9 o motivo principal da sua atividade. O objetivo deste documento \u00e9 olhar algumas linguagens e, do meu ponto de vista, mostrar algumas coisas que eu achei que deveriam estar nas novas linguagens e outras coisas que foram implementadas e eu n\u00e3o gostei. N\u00e3o interessam alguns aspectos t\u00e9cnicos como, se a linguagem possui um sort ele foi implementado como Bubble, Quick ou outro. Parece que a maioria dos programadores simplesmente n\u00e3o se preocupam com as dificuldades e, qualquer discuss\u00e3o sobre as linguagens \u00e9 muito mais emocional do que racional. Como o programador utiliza a l\u00f3gica para o desenvolvimento, deveria utiliz\u00e1-la para outras tarefas tamb\u00e9m. Qualquer programador que se diga plenamente satisfeito com a linguagem utilizada ou: n\u00e3o conhece outras linguagens (ou a pr\u00f3pria) e/ou n\u00e3o est\u00e1 sendo l\u00f3gico na discuss\u00e3o Compiladores e interpretadores Grande parte simplesmente pega alguma coisa, faz alguma altera\u00e7\u00e3o e diz: Agora uma nova e revolucion\u00e1ria linguagem. Na realidade, apenas a mesma coisa de antes com algumas altera\u00e7\u00f5es que facilita, dificultam ou deixam no mesmo o desenvolvimento do programa por parte do programador. Alguns n\u00e3o possuem conhecimento do mundo real ou apenas ignoram para facilitar o trabalho deles quando, na realidade, deveria ser o contr\u00e1rio. Vejamos o caso de uma matriz Tem gente que, se voc\u00ea pergunta: Me mostre o mundo!\" . Ela olha para baixo, enfia o dedo no umbigo e diz: T\u00e1 aqui, \u00f3! . Uma matriz s\u00f3 inicia em zero pois quem fez a linguagem decidiu assim. Atualmente, estou desenvolvendo um sistema em que um dos itens deve ser calculado para \u00e2ngulos entre 7\u00ba e 49\u00ba para que sejam escolhidos os melhores rendimentos. Se come\u00e7a em zero, tenho que definir uma matriz de (49-7) posi\u00e7\u00f5es. Claramente temos a primeira dificuldade. O nosso programa j\u00e1 inicia diferente do nosso problema. Para armazenar os c\u00e1lculos efetuados para o \u00e2ngulo 8, tenho que armazenar na posi\u00e7\u00e3o (8-7), isto \u00e9, mais uma opera\u00e7\u00e3o desnecess\u00e1ria . E assim vai a complexidade da programa\u00e7\u00e3o. Usando Lazarus/Delphi, uma matriz pode iniciar em um n\u00famero arbitr\u00e1rio (o que engloba sua array iniciando em zero). No meu caso, utilizei uma matriz \"[angulo_inicial..angulo_final] of record\" e no program tenho estruturas como \"for a in [angulo_inicial..angulo_final]\". N\u00e3o consigo ver nada mais l\u00f3gico, inteligente e racional que a proposta do Pascal. Posso ter array com um intervalo como [-10..10], [1950..2030], etc.. Para ficar melhor, s\u00f3 se tivesse algo como um step tipo [1950..2030,10] que iniciaria no ano de 1950 de 10 em dez anos at\u00e9 2030. Os meses do ano s\u00e3o de 1 a 12. Seria mais l\u00f3gico definir um array como [0..12] (13 posi\u00e7\u00f5es) e utilizar de 1..12 do que insistir no m\u00eas zero.","title":"In\u00edcio"},{"location":"#evolucao-das-linguagens-de-programacao","text":"Warning","title":"Evolu\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o"},{"location":"#texto-em-desenvolvimento","text":"","title":"Texto em desenvolvimento"},{"location":"#geral","text":"Mais de 60 anos desde a cria\u00e7\u00e3o da primeira linguagen de programa\u00e7\u00e3o de alto n\u00edvel e, para mim, a \u00fanica coisa que evoluiu para o programador foi o editor. As linguagens/framaworks utilizados para desenvolvimento se tornaram extremamente complexos fazendos com que o programador tenha que perder tempo se preocupando com detalhes superfluos que nada tem a ver com a resolu\u00e7\u00e3o do problema que \u00e9 o motivo principal da sua atividade. O objetivo deste documento \u00e9 olhar algumas linguagens e, do meu ponto de vista, mostrar algumas coisas que eu achei que deveriam estar nas novas linguagens e outras coisas que foram implementadas e eu n\u00e3o gostei. N\u00e3o interessam alguns aspectos t\u00e9cnicos como, se a linguagem possui um sort ele foi implementado como Bubble, Quick ou outro. Parece que a maioria dos programadores simplesmente n\u00e3o se preocupam com as dificuldades e, qualquer discuss\u00e3o sobre as linguagens \u00e9 muito mais emocional do que racional. Como o programador utiliza a l\u00f3gica para o desenvolvimento, deveria utiliz\u00e1-la para outras tarefas tamb\u00e9m. Qualquer programador que se diga plenamente satisfeito com a linguagem utilizada ou: n\u00e3o conhece outras linguagens (ou a pr\u00f3pria) e/ou n\u00e3o est\u00e1 sendo l\u00f3gico na discuss\u00e3o","title":"Geral"},{"location":"#compiladores-e-interpretadores","text":"Grande parte simplesmente pega alguma coisa, faz alguma altera\u00e7\u00e3o e diz: Agora uma nova e revolucion\u00e1ria linguagem. Na realidade, apenas a mesma coisa de antes com algumas altera\u00e7\u00f5es que facilita, dificultam ou deixam no mesmo o desenvolvimento do programa por parte do programador. Alguns n\u00e3o possuem conhecimento do mundo real ou apenas ignoram para facilitar o trabalho deles quando, na realidade, deveria ser o contr\u00e1rio. Vejamos o caso de uma matriz Tem gente que, se voc\u00ea pergunta: Me mostre o mundo!\" . Ela olha para baixo, enfia o dedo no umbigo e diz: T\u00e1 aqui, \u00f3! . Uma matriz s\u00f3 inicia em zero pois quem fez a linguagem decidiu assim. Atualmente, estou desenvolvendo um sistema em que um dos itens deve ser calculado para \u00e2ngulos entre 7\u00ba e 49\u00ba para que sejam escolhidos os melhores rendimentos. Se come\u00e7a em zero, tenho que definir uma matriz de (49-7) posi\u00e7\u00f5es. Claramente temos a primeira dificuldade. O nosso programa j\u00e1 inicia diferente do nosso problema. Para armazenar os c\u00e1lculos efetuados para o \u00e2ngulo 8, tenho que armazenar na posi\u00e7\u00e3o (8-7), isto \u00e9, mais uma opera\u00e7\u00e3o desnecess\u00e1ria . E assim vai a complexidade da programa\u00e7\u00e3o. Usando Lazarus/Delphi, uma matriz pode iniciar em um n\u00famero arbitr\u00e1rio (o que engloba sua array iniciando em zero). No meu caso, utilizei uma matriz \"[angulo_inicial..angulo_final] of record\" e no program tenho estruturas como \"for a in [angulo_inicial..angulo_final]\". N\u00e3o consigo ver nada mais l\u00f3gico, inteligente e racional que a proposta do Pascal. Posso ter array com um intervalo como [-10..10], [1950..2030], etc.. Para ficar melhor, s\u00f3 se tivesse algo como um step tipo [1950..2030,10] que iniciaria no ano de 1950 de 10 em dez anos at\u00e9 2030. Os meses do ano s\u00e3o de 1 a 12. Seria mais l\u00f3gico definir um array como [0..12] (13 posi\u00e7\u00f5es) e utilizar de 1..12 do que insistir no m\u00eas zero.","title":"Compiladores e interpretadores"},{"location":"langs/abc/","text":"ABC A linguagem ABC (1987) baseada em ALGO e, tendo como sua filha mais famosa Python. A grande sacada da linguagem foi a endenta\u00e7\u00e3o dos blocos, eliminando chaves e outras frescuras como begin end. COBOL at\u00e9 tinha alguns detalhes de endenta\u00e7\u00e3o para o c\u00f3digo mas n\u00e3o t\u00e3o bons como ABC. Tirando algumas linguagens onde a endenta\u00e7\u00e3o n\u00e3o faria muito sentido, todo o programador endenta a sua linguagem. O mais l\u00f3gico seria usar esta endenta\u00e7\u00e3o para uma finalidade mais nobre. Como n\u00e3o existe um salientador de sintaxe para ABC no pygments (utilizado aqui), vou utilizar outra linguagem para ver como funciona. Apesar de ser interessante, o ambiente de desenvolvimento da linguagem n\u00e3o usa processador de texto para os programas. \u00c9 mais como um REPL e imagens. Mas n\u00e3o vamos falar sobre isto agora. Um exemplo que conta na p\u00e1gina: 1 2 3 4 5 6 7 8 9 10 HOW TO GUESS : PU T choice { 0 .. 99 } IN number WRITE \"Guess my number from 0 to 99: \" RE AD guess EG 0 WHILE guess <> number : SELECT : guess < number : WRITE \"Try higher: \" guess > number : WRITE \"Try lower: \" READ guess EG 0 WRITE \"Yes! Well done\" / Basicamente, quando iniciamos um novo bloco \u00e9 utilizado o dois pontos : . O bloco \u00e9 ent\u00e3o endentado e, quando terminamos a endenta\u00e7\u00e3o, o bloco \u00e9 encerrado sem a necessidade de caracteres especiais. Um detalhe interessante \u00e9 o select da linha 6. A op\u00e7\u00f5es tamb\u00e9m aceitam compara\u00e7\u00f5es como guess < number .","title":"ABC"},{"location":"langs/cobol/","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 IDENTIFICATION DIVISION . PROGRAM-ID . CLIENTES . ENVIRONMENT DIVISION . INPUT-OUTPUT SECTION . FILE-CONTROL . SELECT FILE1 ASSIGN TO DISK ORGANIZATION IS INDEXED ACCESS MODE IS RANDOM FILE STATUS IS FS-STAT RECORD KEY IS FS-KEY . DATA DIVISION . FILE SECTION . FD FILE1 VALUE OF FILE-ID IS \"clientes.dat\" . 01 FILE1-REC . 05 FS-KEY . 10 FS-FONE PIC 9(09) BLANK WHEN ZEROS . 05 FS-NOME PIC X(40) . 05 FS-ENDERECO PIC X(40) . 05 FILLER PIC X(20) . WORKING-STORAGE SECTION . 01 WS-MODULO . 05 FILLER PIC X(11) VALUE \"CLIENTES -\" . 05 WS-OP PIC X(20) VALUE SPACES . 77 WS-OPCAO PIC X . 88 E-INCLUIR VALUE IS \"1\" . 88 E-CONSULTAR VALUE IS \"2\" . 88 E-ALTERAR VALUE IS \"3\" . 88 E-EXCLUIR VALUE IS \"4\" . 88 E-ENCERRAR VALUE IS \"X\" \"x\" . 77 FS-STAT PIC 9(02) . 88 FS-OK VALUE ZEROS . 88 FS-CANCELA VALUE 99 . 88 FS-NAO-EXISTE VALUE 35 . 77 WS-ERRO PIC X . 88 E-SIM VALUES ARE \"S\" \"s\" . 77 WS-NUML PIC 999 . 77 WS-NUMC PIC 999 . 77 COR-FUNDO PIC 9 VALUE 1 . 77 COR-FRENTE PIC 9 VALUE 6 . 77 WS-STATUS PIC X(30) . 77 WS-MSGERRO PIC X(80) . COPY screenio . SCREEN SECTION . 01 SS-CLS . 05 SS-FILLER . 10 BLANK SCREEN . 10 LINE 01 COLUMN 01 ERASE EOL BACKGROUND-COLOR COR-FUNDO . 10 LINE WS-NUML COLUMN 01 ERASE EOL BACKGROUND-COLOR COR-FUNDO . 05 SS-CABECALHO . 10 LINE 01 COLUMN 02 PIC X(31) FROM WS-MODULO HIGHLIGHT FOREGROUND-COLOR COR-FRENTE BACKGROUND-COLOR COR-FUNDO . 05 SS-STATUS . 10 LINE WS-NUML COLUMN 2 ERASE EOL PIC X(30) FROM WS-STATUS HIGHLIGHT FOREGROUND-COLOR COR-FRENTE BACKGROUND-COLOR COR-FUNDO . 01 SS-MENU FOREGROUND-COLOR 6 . 05 LINE 07 COLUMN 15 VALUE \"1 - INCLUIR\" . 05 LINE 08 COLUMN 15 VALUE \"2 - CONSULTAR\" . 05 LINE 09 COLUMN 15 VALUE \"3 - ALTERAR\" . 05 LINE 10 COLUMN 15 VALUE \"4 - EXCLUIR\" . 05 LINE 11 COLUMN 15 VALUE \"X - ENCERRAR\" . 05 LINE 13 COLUMN 15 VALUE \"OP\u00c7\u00c3O: \" . 05 LINE 13 COL PLUS 1 USING WS-OPCAO AUTO . 01 SS-TELA-REGISTRO . 05 SS-CHAVE FOREGROUND-COLOR 2 . 10 LINE 10 COLUMN 10 VALUE \"TELEFONE:\" . 10 COLUMN PLUS 2 PIC 9(09) USING FS-FONE BLANK WHEN ZEROS . 05 SS-DADOS . 10 LINE 11 COLUMN 10 VALUE \" NOME:\" . 10 COLUMN PLUS 2 PIC X(40) USING FS-NOME . 10 LINE 12 COLUMN 10 VALUE \"ENDERE\u00c7O:\" . 10 COLUMN PLUS 2 PIC X(40) USING FS-ENDERECO . 01 SS-ERRO . 05 FILLER FOREGROUND-COLOR 4 BACKGROUND-COLOR 1 HIGHLIGHT . 10 LINE WS-NUML COLUMN 2 PIC X(80) FROM WS-MSGERRO BELL . 10 COLUMN PLUS 2 TO WS-ERRO . PROCEDURE DIVISION . INICIO . SET ENVIRONMENT 'COB_SCREEN_EXCEPTIONS' TO 'Y' . SET ENVIRONMENT 'COB_SCREEN_ESC' TO 'Y' . SET ENVIRONMENT 'ESCDELAY' TO '25' . ACCEPT WS-NUML FROM LINES ACCEPT WS-NUMC FROM COLUMNS PERFORM ABRIR-ARQUIVOS PERFORM UNTIL E-ENCERRAR MOVE \"MENU\" TO WS-OP MOVE \"ESCOLHA A OP\u00c7\u00c3O\" TO WS-STATUS MOVE SPACES TO WS-OPCAO DISPLAY SS-CLS ACCEPT SS-MENU EVALUATE TRUE WHEN E-INCLUIR PERFORM INCLUI THRU INCLUI-FIM WHEN E-CONSULTAR PERFORM CONSULTA THRU CONSULTA-FIM WHEN E-ALTERAR PERFORM ALTERA THRU ALTERA-FIM WHEN E-EXCLUIR PERFORM EXCLUI THRU EXCLUI-FIM END-EVALUATE END-PERFORM . FINALIZA . CLOSE FILE1 . STOP RUN . * ----------------------------------- INCLUI . MOVE \"INCLUS\u00c3O\" TO WS-OP . MOVE \"ESC PARA ENCERRAR\" TO WS-STATUS . DISPLAY SS-CLS . MOVE SPACES TO FILE1-REC . INCLUI-LOOP . ACCEPT SS-TELA-REGISTRO . IF COB-CRT-STATUS = COB-SCR-ESC GO INCLUI-FIM END-IF IF FS-NOME EQUAL SPACES OR FS-ENDERECO EQUAL SPACES MOVE \"FAVOR INFORMAR NOME E ENDERE\u00c7O\" TO WS-MSGERRO PERFORM MOSTRA-ERRO GO INCLUI-LOOP END-IF WRITE FILE1-REC INVALID KEY MOVE \"CLIENTE J\u00c1 EXISTE\" TO WS-MSGERRO PERFORM MOSTRA-ERRO MOVE ZEROS TO FS-KEY END-WRITE . GO INCLUI . INCLUI-FIM . * ----------------------------------- CONSULTA . MOVE \"CONSULTA\" TO WS-OP . MOVE \"ESC PARA ENCERRAR\" TO WS-STATUS . DISPLAY SS-CLS . CONSULTA-LOOP . MOVE SPACES TO FILE1-REC . DISPLAY SS-TELA-REGISTRO . PERFORM LE-CLIENTE THRU LE-CLIENTE-FIM . IF FS-CANCELA GO CONSULTA-FIM END-IF IF FS-OK DISPLAY SS-DADOS MOVE \"PRESSIONE ENTER\" TO WS-MSGERRO PERFORM MOSTRA-ERRO END-IF . GO CONSULTA-LOOP . CONSULTA-FIM . * ----------------------------------- ALTERA . MOVE \"ALTERA\u00c7\u00c3O\" TO WS-OP . MOVE \"ESC PARA ENCERRAR\" TO WS-STATUS . DISPLAY SS-CLS . ALTERA-LOOP . MOVE SPACES TO FILE1-REC . DISPLAY SS-TELA-REGISTRO . PERFORM LE-CLIENTE THRU LE-CLIENTE-FIM . IF FS-CANCELA GO TO ALTERA-FIM END-IF IF FS-OK ACCEPT SS-DADOS IF COB-CRT-STATUS = COB-SCR-ESC GO ALTERA-LOOP END-IF ELSE GO ALTERA-LOOP END-IF REWRITE FILE1-REC INVALID KEY MOVE \"ERRO AO GRAVAR\" TO WS-MSGERRO PERFORM MOSTRA-ERRO NOT INVALID KEY CONTINUE END-REWRITE . GO ALTERA-LOOP . ALTERA-FIM . * ----------------------------------- EXCLUI . MOVE \"EXCLUS\u00c3O\" TO WS-OP . MOVE \"ESC PARA ENCERRAR\" TO WS-STATUS . DISPLAY SS-CLS . MOVE SPACES TO FILE1-REC . DISPLAY SS-TELA-REGISTRO . PERFORM LE-CLIENTE THRU LE-CLIENTE-FIM . IF FS-CANCELA GO EXCLUI-FIM END-IF IF NOT FS-OK GO EXCLUI END-IF DISPLAY SS-DADOS . MOVE \"N\" TO WS-ERRO . MOVE \"CONFIRMA A EXCLUS\u00c3O DO CLIENTE (S/N)?\" TO WS-MSGERRO . ACCEPT SS-ERRO . IF NOT E-SIM GO EXCLUI-FIM END-IF DELETE FILE1 INVALID KEY MOVE \"ERRO AO EXCLUIR\" TO WS-MSGERRO PERFORM MOSTRA-ERRO END-DELETE . EXCLUI-FIM . * ----------------------------------- * LE CLIENTE E MOSTRA MENSAGEM SE CHAVE N\u00c3O EXISTE LE-CLIENTE . ACCEPT SS-CHAVE . IF NOT COB-CRT-STATUS = COB-SCR-ESC READ FILE1 INVALID KEY MOVE \"CLIENTE N\u00c3O ENCONTRADO\" TO WS-MSGERRO PERFORM MOSTRA-ERRO END-READ ELSE MOVE 99 to FS-STAT END-IF . LE-CLIENTE-FIM . * ----------------------------------- * ABRE ARQUIVOS PARA ENTRADA E SA\u00cdDA ABRIR-ARQUIVOS . OPEN I-O FILE1 IF FS-NAO-EXISTE THEN OPEN OUTPUT FILE1 CLOSE FILE1 OPEN I-O FILE1 END-IF . * ----------------------------------- * MOSTRA MENSAGEM, ESPERA ENTER, ATUALIZA BARRA STATUS MOSTRA-ERRO . DISPLAY SS-ERRO ACCEPT SS-ERRO DISPLAY SS-STATUS .","title":"COBOL"},{"location":"langs/geral/","text":"Introdu\u00e7\u00e3o O objetivo aqui \u00e9 olhar algumas linguagens de programa\u00e7\u00e3o de alto nivel, e falar sobre alguns aspectos que seriam interessantes que novas linguagens adotassem para facilitar a vida do programador de aplicativos para o usu\u00e1rio final. \u00c9 claro que o programador de suporte, aquele que desenvolve os aplicativos para o programador, tamb\u00e9m deveria se valer das informa\u00e7\u00f5es. Mas \u00e9 claro que quem decide s\u00e3o os grandes. Eles possuem o dinheiro para manter uma grande equipe para o desenvolvimento. E eles decidem \"vamos fazer essa m* aqui e pronto.\". Fazem algo baseado em algo que j\u00e1 existe, colocam algumas frescuras aqui e l\u00e1, trocam uns nomes l\u00e1 e acol\u00e1. Eias a nova linguagem revolucion\u00e1ria. A\u00ed tem gente desenvolvendo para Android em Java, outra turma escolheu o Kotlin e uma terceira decidiu pela Dart que \u00e9 utilizada pela oitava maravilha do mundo (OMG).","title":"Introdu\u00e7\u00e3o"},{"location":"langs/geral/#introducao","text":"O objetivo aqui \u00e9 olhar algumas linguagens de programa\u00e7\u00e3o de alto nivel, e falar sobre alguns aspectos que seriam interessantes que novas linguagens adotassem para facilitar a vida do programador de aplicativos para o usu\u00e1rio final. \u00c9 claro que o programador de suporte, aquele que desenvolve os aplicativos para o programador, tamb\u00e9m deveria se valer das informa\u00e7\u00f5es. Mas \u00e9 claro que quem decide s\u00e3o os grandes. Eles possuem o dinheiro para manter uma grande equipe para o desenvolvimento. E eles decidem \"vamos fazer essa m* aqui e pronto.\". Fazem algo baseado em algo que j\u00e1 existe, colocam algumas frescuras aqui e l\u00e1, trocam uns nomes l\u00e1 e acol\u00e1. Eias a nova linguagem revolucion\u00e1ria. A\u00ed tem gente desenvolvendo para Android em Java, outra turma escolheu o Kotlin e uma terceira decidiu pela Dart que \u00e9 utilizada pela oitava maravilha do mundo (OMG).","title":"Introdu\u00e7\u00e3o"},{"location":"langs/rebol/","text":"","title":"REBOL/Red"},{"location":"langs/unicon/","text":"Icon e Unicon Basicamente Icon (1977) foi baseada em SNOBOL (1962) e Unicon (1996) foi baseada em Icon com OO. Mas vamos ao que interessa. Sintaxe 1 2 3 4 5 6 7 8 9 # # Coment\u00e1rio # procedure main () a := 1 b := 2 * 2 write ( a + b ) write ( \"Al\u00f4 mundo\" ) end Um pouco de C e um pouco de Pascal deixando o c\u00f3digo muito mais limpo. \u00c9 perfeitamente poss\u00edvel eliminar o begin do Pascal ou { do C sem nenhum problema. A retirados do ; (ponto e v\u00edrgula) tamb\u00e9m ajudam a deixar o c\u00f3digo mais limpo. Esses elementos s\u00e3o apenas para o compilador e n\u00e3o s\u00e3o necess\u00e1rios para a resolu\u00e7\u00e3o do problema. Como aspecto negativo, vejo a ado\u00e7\u00e3o de := do Pascal para a atribui\u00e7\u00e3o. S\u00f3 para facilitar a compila\u00e7\u00e3o pois poderia ser inferido conforme o contexto. Algo como if a = 1 seria uma compara\u00e7\u00e3o e n\u00e3o uma atribui\u00e7\u00e3o. Aquele end no final tamb\u00e9m seria desnecess\u00e1rio se adotasse uma endenta\u00e7\u00e3o como ABC . Pelo menos n\u00e3o \u00e9 necess\u00e1rio ponto ou ponto e v\u00edrgula como no Pascal. Base num\u00e9rica Na realidade, unidades de medidas s\u00e3o mil vezes mais importantes do que bases num\u00e9ricas no mundo real. Em algumas linguagens (n\u00e3o vou citar nomes) usamos 0b101 para base bin\u00e1ria, 0x16A para base hexadecimal, a base decimal inicial com um n\u00famero mas, se for zero ent\u00e3o \u00e9 base octal. A coisa mais mal feita que eu j\u00e1 vi no universo. Se algu\u00e9m escrever 05493 vai acusar erro e se escrever 0345 pode n\u00e3o ser o que o programador deseja. Unicon utiliza a nota\u00e7\u00e3o [base][r][n\u00famero] sendo base um n\u00famero decimal entre 2 e 36, seguido de R ou r e o n\u00famero propriamente dito que deve respeitar a base [0..9 A..Z a..z]. A mas n\u00e3o se usa todas as bases. Use apenas as desejadas. Unidades de media Unicon possui alguns sufixos como K (kilo), M (mega), G (giga), T (tera) e P (peta). O problema \u00e9 que s\u00e3o multiplos de 1024. 1 2 3 4 5 procedure main () write ( 1K ) write ( 3K ) write ( 5M ) end e o resultado \u00e9: 1024 3072 5242880 Pessoalmente acho que as unidades deveriam ser uma propriedade das vari\u00e1veis. Assim como temos inteiros, l\u00f3gicos e outros, poder\u00edamos ter cent\u00edmetros, polegadas, kilo, grama, on\u00e7as, etc., e variantes como km/h, kg/cm, etc.. Por exemplo: a = 23 cm a = a + 7 inch # a tem 40.78 cm b = 4 oz # 4 on\u00e7as c = a + b # erro cm e oz s\u00e3o incompat\u00edveis Ah, mas vai dar muito trabalho para quem projetar o compilador. Besteira. Voc\u00ea prefere ter mais trabalho para desenvolver o sistema do que quem vai desenvolver o compilador. Pode ter certeza que o computador n\u00e3o vai se importar em alguns passos a mais para entender o que voc\u00ea est\u00e1 querendo fazer. Sem contar que \u00e9 muito mais f\u00e1cil voc\u00ea errar do que o computador trabalhar. Ah, mas n\u00e3o tem problema. Besteira novamente. Pelo menos at\u00e9 a empresa perder 125 milhoes de d\u00f3lares por erros bestas que poderiam ser evitados com facilidade.. Convers\u00e3o de string para n\u00famero \u00c9 poss\u00edvel uma opera\u00e7\u00e3o do tipo a = 2 * \"14\" o que retorna 28 mas a string deve ser um valor num\u00e9rico v\u00e1lido. N\u00e3o \u00e9 t\u00e3o inconsequente como php que aceitaria a = 2 * \"14abc\" . Se retornasse \"14abc14abc\" seria mais l\u00f3gico. Resultado de express\u00f5es l\u00f3gicas Muitas vezes precisamos colocar um valor em determinada vari\u00e1vel baseado em determinadas condi\u00e7\u00f5es. \u00c9 mais pr\u00e1tico (e considero mais leg\u00edvel) utilizando o formato a := if cond then v1 else v2 do que usando if cond then a := v1 else a := v2 1 2 3 4 5 6 7 8 9 10 procedure main () a := if 1 > 2 then 5 else 6 b := case a of { 5 : \"cinco\" 6 : \"seis\" default : \"indefinido\" } write ( a ) write ( b ) end Note que no case foram utilizadas chaves para abrir e fechar o bloco. Poderiam ter sido evitadas se tivessem escolhido um design diferente. Volto ao assunto na linguagem ABC. Finalmente Depois retorno para escrever sobre algumas coisas na linguagem que tamb\u00e9m s\u00e3o interessantes como as repeti\u00e7\u00f5es (every), generators. A parte de processamento de cadeias de caracteres \u00e9 herdada do SNOBOL \u00e9 muito boa e ainda possui ER. O funcionamento baseado em sucesso/falha. A biblioteca tamb\u00e9m tem bastante coisa. No Rosetta Code existem diversos exemp\u013aos para avaliar. \u00c9 claro que alguns programas s\u00e3o mais f\u00e1ceis de entender que outros. Tamb\u00e9m \u00e9 poss\u00edvel baixar diversos Livros sobre Icon.","title":"icon/unicon"},{"location":"langs/unicon/#icon-e-unicon","text":"Basicamente Icon (1977) foi baseada em SNOBOL (1962) e Unicon (1996) foi baseada em Icon com OO. Mas vamos ao que interessa.","title":"Icon e Unicon"},{"location":"langs/unicon/#sintaxe","text":"1 2 3 4 5 6 7 8 9 # # Coment\u00e1rio # procedure main () a := 1 b := 2 * 2 write ( a + b ) write ( \"Al\u00f4 mundo\" ) end Um pouco de C e um pouco de Pascal deixando o c\u00f3digo muito mais limpo. \u00c9 perfeitamente poss\u00edvel eliminar o begin do Pascal ou { do C sem nenhum problema. A retirados do ; (ponto e v\u00edrgula) tamb\u00e9m ajudam a deixar o c\u00f3digo mais limpo. Esses elementos s\u00e3o apenas para o compilador e n\u00e3o s\u00e3o necess\u00e1rios para a resolu\u00e7\u00e3o do problema. Como aspecto negativo, vejo a ado\u00e7\u00e3o de := do Pascal para a atribui\u00e7\u00e3o. S\u00f3 para facilitar a compila\u00e7\u00e3o pois poderia ser inferido conforme o contexto. Algo como if a = 1 seria uma compara\u00e7\u00e3o e n\u00e3o uma atribui\u00e7\u00e3o. Aquele end no final tamb\u00e9m seria desnecess\u00e1rio se adotasse uma endenta\u00e7\u00e3o como ABC . Pelo menos n\u00e3o \u00e9 necess\u00e1rio ponto ou ponto e v\u00edrgula como no Pascal.","title":"Sintaxe"},{"location":"langs/unicon/#base-numerica","text":"Na realidade, unidades de medidas s\u00e3o mil vezes mais importantes do que bases num\u00e9ricas no mundo real. Em algumas linguagens (n\u00e3o vou citar nomes) usamos 0b101 para base bin\u00e1ria, 0x16A para base hexadecimal, a base decimal inicial com um n\u00famero mas, se for zero ent\u00e3o \u00e9 base octal. A coisa mais mal feita que eu j\u00e1 vi no universo. Se algu\u00e9m escrever 05493 vai acusar erro e se escrever 0345 pode n\u00e3o ser o que o programador deseja. Unicon utiliza a nota\u00e7\u00e3o [base][r][n\u00famero] sendo base um n\u00famero decimal entre 2 e 36, seguido de R ou r e o n\u00famero propriamente dito que deve respeitar a base [0..9 A..Z a..z]. A mas n\u00e3o se usa todas as bases. Use apenas as desejadas.","title":"Base num\u00e9rica"},{"location":"langs/unicon/#unidades-de-media","text":"Unicon possui alguns sufixos como K (kilo), M (mega), G (giga), T (tera) e P (peta). O problema \u00e9 que s\u00e3o multiplos de 1024. 1 2 3 4 5 procedure main () write ( 1K ) write ( 3K ) write ( 5M ) end e o resultado \u00e9: 1024 3072 5242880 Pessoalmente acho que as unidades deveriam ser uma propriedade das vari\u00e1veis. Assim como temos inteiros, l\u00f3gicos e outros, poder\u00edamos ter cent\u00edmetros, polegadas, kilo, grama, on\u00e7as, etc., e variantes como km/h, kg/cm, etc.. Por exemplo: a = 23 cm a = a + 7 inch # a tem 40.78 cm b = 4 oz # 4 on\u00e7as c = a + b # erro cm e oz s\u00e3o incompat\u00edveis Ah, mas vai dar muito trabalho para quem projetar o compilador. Besteira. Voc\u00ea prefere ter mais trabalho para desenvolver o sistema do que quem vai desenvolver o compilador. Pode ter certeza que o computador n\u00e3o vai se importar em alguns passos a mais para entender o que voc\u00ea est\u00e1 querendo fazer. Sem contar que \u00e9 muito mais f\u00e1cil voc\u00ea errar do que o computador trabalhar. Ah, mas n\u00e3o tem problema. Besteira novamente. Pelo menos at\u00e9 a empresa perder 125 milhoes de d\u00f3lares por erros bestas que poderiam ser evitados com facilidade..","title":"Unidades de media"},{"location":"langs/unicon/#conversao-de-string-para-numero","text":"\u00c9 poss\u00edvel uma opera\u00e7\u00e3o do tipo a = 2 * \"14\" o que retorna 28 mas a string deve ser um valor num\u00e9rico v\u00e1lido. N\u00e3o \u00e9 t\u00e3o inconsequente como php que aceitaria a = 2 * \"14abc\" . Se retornasse \"14abc14abc\" seria mais l\u00f3gico.","title":"Convers\u00e3o de string para n\u00famero"},{"location":"langs/unicon/#resultado-de-expressoes-logicas","text":"Muitas vezes precisamos colocar um valor em determinada vari\u00e1vel baseado em determinadas condi\u00e7\u00f5es. \u00c9 mais pr\u00e1tico (e considero mais leg\u00edvel) utilizando o formato a := if cond then v1 else v2 do que usando if cond then a := v1 else a := v2 1 2 3 4 5 6 7 8 9 10 procedure main () a := if 1 > 2 then 5 else 6 b := case a of { 5 : \"cinco\" 6 : \"seis\" default : \"indefinido\" } write ( a ) write ( b ) end Note que no case foram utilizadas chaves para abrir e fechar o bloco. Poderiam ter sido evitadas se tivessem escolhido um design diferente. Volto ao assunto na linguagem ABC.","title":"Resultado de express\u00f5es l\u00f3gicas"},{"location":"langs/unicon/#finalmente","text":"Depois retorno para escrever sobre algumas coisas na linguagem que tamb\u00e9m s\u00e3o interessantes como as repeti\u00e7\u00f5es (every), generators. A parte de processamento de cadeias de caracteres \u00e9 herdada do SNOBOL \u00e9 muito boa e ainda possui ER. O funcionamento baseado em sucesso/falha. A biblioteca tamb\u00e9m tem bastante coisa. No Rosetta Code existem diversos exemp\u013aos para avaliar. \u00c9 claro que alguns programas s\u00e3o mais f\u00e1ceis de entender que outros. Tamb\u00e9m \u00e9 poss\u00edvel baixar diversos Livros sobre Icon.","title":"Finalmente"}]}